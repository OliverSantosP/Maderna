﻿@model Maderna.Models.Products
@using System.Linq


@{
    ViewBag.Title = "Create Product";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
     @Html.ValidationSummary(true)
    <div class="form-horizontal">
        <div class="row">

            <div class="col-md-2">
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, new { @class = "control-label" })
                    <br />
                    @Html.EditorFor(model => model.Name)
                    @Html.ValidationMessageFor(model => model.Name)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, new { @class = "control-label" })
                    <br />
                    <textarea class="form-control" rows="3" required></textarea>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Category, new { @class = "control-label" })
                    <br />
                    <div class="dropdown">
                        <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown">
                            Select one.
                            <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu1">
                            @foreach (var item in Maderna.Models.Categories.GetAll())
                            {
                                <li role="presentation"><a role="menuitem" tabindex="-1" href="#">@item.Name</a></li>
                            }
                        </ul>
                    </div>
                </div>
            </div>

            <form action="~/Products/SaveDropzoneJsUploadedFiles" class="dropzone" id="dropzoneJsForm"></form>
            <div class="col-md-4">
                <form action="~/Products/SaveDropzoneJsUploadedFiles" class="dropzone" id="dropzoneJsForm2"></form>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" id="submit-all" name="submit-all" />
                </div>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/dropzone")
    <script type="text/javascript">
        // myDropzone is the configuration for the element that has an id attribute
        // with the value my-dropzone (or myDropzone)
        Dropzone.options.dropzoneJsForm2 = {
            // Prevents Dropzone from uploading dropped files immediately
            autoProcessQueue: false,

            init: function () {
                var submitButton = document.querySelector("#submit-all")
                myDropzone = this; // closure

                submitButton.addEventListener("click", function () {
                    //myDropzone.processQueue(); // Tell Dropzone to process all queued files.
                });

                // You might want to show the submit button only when
                // files are dropped here:
                this.on("addedfile", function (file) {

                    // Create the remove button
                    var removeButton = Dropzone.createElement("<button>Remove file</button>");


                    // Capture the Dropzone instance as closure.
                    var _this = this;

                    // Listen to the click event
                    removeButton.addEventListener("click", function (e) {
                        // Make sure the button click doesn't submit the form:
                        e.preventDefault();
                        e.stopPropagation();

                        // Remove the file preview.
                        _this.removeFile(file);
                        // If you want to the delete the file on the server as well,
                        // you can do the AJAX request here.
                    });

                    // Add the button to the file preview element.
                    file.previewElement.appendChild(removeButton);



                });
            }
        };
    </script>
}







